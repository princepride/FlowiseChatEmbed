{"version":3,"file":"ts-stack-markdown.umd.js","sources":["../../projects/markdown/src/extend-regexp.ts","../../projects/markdown/src/helpers.ts","../../projects/markdown/src/interfaces.ts","../../node_modules/tslib/tslib.es6.js","../../projects/markdown/src/renderer.ts","../../projects/markdown/src/inline-lexer.ts","../../projects/markdown/src/parser.ts","../../projects/markdown/src/marked.ts","../../projects/markdown/src/block-lexer.ts","../../projects/markdown/ts-stack-markdown.ts"],"sourcesContent":["/*\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nexport class ExtendRegexp {\n  private source: string;\n  private flags: string;\n\n  constructor(regex: RegExp, flags: string = '') {\n    this.source = regex.source;\n    this.flags = flags;\n  }\n\n  /**\n   * Extend regular expression.\n   *\n   * @param groupName Regular expression for search a group name.\n   * @param groupRegexp Regular expression of named group.\n   */\n  setGroup(groupName: RegExp | string, groupRegexp: RegExp | string): this {\n    let newRegexp: string = typeof groupRegexp == 'string' ? groupRegexp : groupRegexp.source;\n    newRegexp = newRegexp.replace(/(^|[^\\[])\\^/g, '$1');\n\n    // Extend regexp.\n    this.source = this.source.replace(groupName, newRegexp);\n    return this;\n  }\n\n  /**\n   * Returns a result of extending a regular expression.\n   */\n  getRegexp(): RegExp {\n    return new RegExp(this.source, this.flags);\n  }\n}\n","/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { Replacements } from './interfaces';\n\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst replacements: Replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  // tslint:disable-next-line:quotemark\n  \"'\": '&#39;',\n};\n\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nexport function escape(html: string, encode?: boolean) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, (ch: string) => replacements[ch]);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, (ch: string) => replacements[ch]);\n    }\n  }\n\n  return html;\n}\n\nexport function unescape(html: string) {\n  // Explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/gi, function (_, n) {\n    n = n.toLowerCase();\n\n    if (n === 'colon') {\n      return ':';\n    }\n\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n\n    return '';\n  });\n}\n","/**\n * @license\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { escape, unescape } from './helpers';\nimport { Renderer } from './renderer';\n\nexport interface Obj {\n  [key: string]: any;\n}\n\nexport interface RulesBlockBase {\n  newline: RegExp;\n  code: RegExp;\n  hr: RegExp;\n  heading: RegExp;\n  lheading: RegExp;\n  blockquote: RegExp;\n  list: RegExp;\n  html: RegExp;\n  def: RegExp;\n  paragraph: RegExp;\n  text: RegExp;\n  bullet: RegExp;\n  /**\n   * List item (<li>).\n   */\n  item: RegExp;\n}\n\nexport interface RulesBlockGfm extends RulesBlockBase {\n  fences: RegExp;\n}\n\nexport interface RulesBlockTables extends RulesBlockGfm {\n  nptable: RegExp;\n  table: RegExp;\n}\n\nexport interface Link {\n  href: string;\n  title: string;\n}\n\nexport interface Links {\n  [key: string]: Link;\n}\n\nexport enum TokenType {\n  space = 1,\n  text,\n  paragraph,\n  heading,\n  listStart,\n  listEnd,\n  looseItemStart,\n  looseItemEnd,\n  listItemStart,\n  listItemEnd,\n  blockquoteStart,\n  blockquoteEnd,\n  code,\n  table,\n  html,\n  hr\n}\n\nexport type Align = 'center' | 'left' | 'right';\n\nexport interface Token {\n  type: number | string;\n  text?: string;\n  lang?: string;\n  /**\n   * Metadata of gfm code.\n   */\n  meta?: string;\n  depth?: number;\n  header?: string[];\n  align?: Align[];\n  cells?: string[][];\n  ordered?: boolean;\n  pre?: boolean;\n  escaped?: boolean;\n  execArr?: RegExpExecArray;\n  /**\n   * Used for debugging. Identifies the line number in the resulting HTML file.\n   */\n  line?: number;\n}\n\nexport interface RulesInlineBase {\n  escape: RegExp;\n  autolink: RegExp;\n  tag: RegExp;\n  link: RegExp;\n  reflink: RegExp;\n  nolink: RegExp;\n  strong: RegExp;\n  em: RegExp;\n  code: RegExp;\n  br: RegExp;\n  text: RegExp;\n  _inside: RegExp;\n  _href: RegExp;\n}\n\nexport interface RulesInlinePedantic extends RulesInlineBase {}\n\n/**\n * GFM Inline Grammar\n */\nexport interface RulesInlineGfm extends RulesInlineBase {\n  url: RegExp;\n  del: RegExp;\n}\n\nexport interface RulesInlineBreaks extends RulesInlineGfm {}\n\nexport class MarkedOptions {\n  gfm?: boolean = true;\n  tables?: boolean = true;\n  breaks?: boolean = false;\n  pedantic?: boolean = false;\n  sanitize?: boolean = false;\n  sanitizer?: (text: string) => string;\n  mangle?: boolean = true;\n  smartLists?: boolean = false;\n  silent?: boolean = false;\n  /**\n   * @param code The section of code to pass to the highlighter.\n   * @param lang The programming language specified in the code block.\n   */\n  highlight?: (code: string, lang?: string) => string;\n  langPrefix?: string = 'lang-';\n  smartypants?: boolean = false;\n  headerPrefix?: string = '';\n  /**\n   * An object containing functions to render tokens to HTML. Default: `new Renderer()`\n   */\n  renderer?: Renderer;\n  /**\n   * Self-close the tags for void elements (&lt;br/&gt;, &lt;img/&gt;, etc.)\n   * with a \"/\" as required by XHTML.\n   */\n  xhtml?: boolean = false;\n  /**\n   * The function that will be using to escape HTML entities.\n   * By default using inner helper.\n   */\n  escape?: (html: string, encode?: boolean) => string = escape;\n  /**\n   * The function that will be using to unescape HTML entities.\n   * By default using inner helper.\n   */\n  unescape?: (html: string) => string = unescape;\n  /**\n   * If set to `true`, an inline text will not be taken in paragraph.\n   *\n   * ```ts\n   * // isNoP == false\n   * Marked.parse('some text'); // returns '<p>some text</p>'\n   *\n   * Marked.setOptions({isNoP: true});\n   *\n   * Marked.parse('some text'); // returns 'some text'\n   * ```\n   */\n  isNoP?: boolean;\n}\n\nexport interface LexerReturns {\n  tokens: Token[];\n  links: Links;\n}\n\nexport interface DebugReturns extends LexerReturns {\n  result: string;\n}\n\nexport interface Replacements {\n  [key: string]: string;\n}\n\nexport interface RulesInlineCallback {\n  regexp?: RegExp;\n  condition(): RegExp;\n  tokenize(execArr: RegExpExecArray): void;\n}\n\nexport type SimpleRenderer = (execArr?: RegExpExecArray) => string;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { Align, MarkedOptions } from './interfaces';\nimport { Marked } from './marked';\n\nexport class Renderer {\n  protected options: MarkedOptions;\n\n  constructor(options?: MarkedOptions) {\n    this.options = options || Marked.options;\n  }\n\n  code(code: string, lang?: string, escaped?: boolean, meta?: string): string {\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    const escapedCode = (escaped ? code : this.options.escape(code, true));\n\n    if (!lang) {\n      return `\\n<pre><code>${escapedCode}\\n</code></pre>\\n`;\n    }\n\n    const className = this.options.langPrefix + this.options.escape(lang, true);\n    return `\\n<pre><code class=\"${className}\">${escapedCode}\\n</code></pre>\\n`;\n  }\n\n  blockquote(quote: string): string {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html: string): string {\n    return html;\n  }\n\n  heading(text: string, level: number, raw: string): string {\n    const id: string = this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-');\n\n    return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n  }\n\n  hr(): string {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body: string, ordered?: boolean): string {\n    const type = ordered ? 'ol' : 'ul';\n\n    return `\\n<${type}>\\n${body}</${type}>\\n`;\n  }\n\n  listitem(text: string): string {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  paragraph(text: string): string {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header: string, body: string): string {\n    return `\n<table>\n<thead>\n${header}</thead>\n<tbody>\n${body}</tbody>\n</table>\n`;\n  }\n\n  tablerow(content: string): string {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content: string, flags: { header?: boolean; align?: Align }): string {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // *** Inline level renderer methods. ***\n\n  strong(text: string): string {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text: string): string {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text: string): string {\n    return '<code>' + text + '</code>';\n  }\n\n  br(): string {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text: string): string {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href: string, title: string, text: string): string {\n    if (this.options.sanitize) {\n      let prot: string;\n\n      try {\n        prot = decodeURIComponent(this.options.unescape(href))\n          .replace(/[^\\w:]/g, '')\n          .toLowerCase();\n      } catch (e) {\n        return text;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return text;\n      }\n    }\n\n    let out = '<a href=\"' + href + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += '>' + text + '</a>';\n\n    return out;\n  }\n\n  image(href: string, title: string, text: string): string {\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += this.options.xhtml ? '/>' : '>';\n\n    return out;\n  }\n\n  text(text: string): string {\n    return text;\n  }\n}\n","/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { ExtendRegexp } from './extend-regexp';\nimport {\n  Link,\n  Links,\n  MarkedOptions,\n  RulesInlineBase,\n  RulesInlineBreaks,\n  RulesInlineCallback,\n  RulesInlineGfm,\n  RulesInlinePedantic,\n} from './interfaces';\nimport { Marked } from './marked';\nimport { Renderer } from './renderer';\n\n/**\n * Inline Lexer & Compiler.\n */\nexport class InlineLexer {\n  protected static rulesBase: RulesInlineBase = null;\n  /**\n   * Pedantic Inline Grammar.\n   */\n  protected static rulesPedantic: RulesInlinePedantic = null;\n  /**\n   * GFM Inline Grammar\n   */\n  protected static rulesGfm: RulesInlineGfm = null;\n  /**\n   * GFM + Line Breaks Inline Grammar.\n   */\n  protected static rulesBreaks: RulesInlineBreaks = null;\n  protected rules: RulesInlineBase | RulesInlinePedantic | RulesInlineGfm | RulesInlineBreaks;\n  protected renderer: Renderer;\n  protected inLink: boolean;\n  protected hasRulesGfm: boolean;\n  protected ruleCallbacks: RulesInlineCallback[];\n\n  constructor(\n    protected staticThis: typeof InlineLexer,\n    protected links: Links,\n    protected options: MarkedOptions = Marked.options,\n    renderer?: Renderer\n  ) {\n    this.renderer = renderer || this.options.renderer || new Renderer(this.options);\n\n    if (!this.links) {\n      throw new Error(`InlineLexer requires 'links' parameter.`);\n    }\n\n    this.setRules();\n  }\n\n  /**\n   * Static Lexing/Compiling Method.\n   */\n  static output(src: string, links: Links, options: MarkedOptions): string {\n    const inlineLexer = new this(this, links, options);\n    return inlineLexer.output(src);\n  }\n\n  protected static getRulesBase(): RulesInlineBase {\n    if (this.rulesBase) {\n      return this.rulesBase;\n    }\n\n    /**\n     * Inline-Level Grammar.\n     */\n    const base: RulesInlineBase = {\n      escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n      autolink: /^<([^ <>]+(@|:\\/)[^ <>]+)>/,\n      tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^<'\">])*?>/,\n      link: /^!?\\[(inside)\\]\\(href\\)/,\n      reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n      nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n      strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n      em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n      code: /^(`+)([\\s\\S]*?[^`])\\1(?!`)/,\n      br: /^ {2,}\\n(?!\\s*$)/,\n      text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/,\n      _inside: /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/,\n      _href: /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/,\n    };\n\n    base.link = new ExtendRegexp(base.link).setGroup('inside', base._inside).setGroup('href', base._href).getRegexp();\n\n    base.reflink = new ExtendRegexp(base.reflink).setGroup('inside', base._inside).getRegexp();\n\n    return (this.rulesBase = base);\n  }\n\n  protected static getRulesPedantic(): RulesInlinePedantic {\n    if (this.rulesPedantic) {\n      return this.rulesPedantic;\n    }\n\n    return (this.rulesPedantic = {\n      ...this.getRulesBase(),\n      ...{\n        strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n      },\n    });\n  }\n\n  protected static getRulesGfm(): RulesInlineGfm {\n    if (this.rulesGfm) {\n      return this.rulesGfm;\n    }\n\n    const base = this.getRulesBase();\n\n    const escape = new ExtendRegexp(base.escape).setGroup('])', '~|])').getRegexp();\n\n    const text = new ExtendRegexp(base.text).setGroup(']|', '~]|').setGroup('|', '|https?://|').getRegexp();\n\n    return (this.rulesGfm = {\n      ...base,\n      ...{\n        escape,\n        url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n        del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n        text,\n      },\n    });\n  }\n\n  protected static getRulesBreaks(): RulesInlineBreaks {\n    if (this.rulesBreaks) {\n      return this.rulesBreaks;\n    }\n\n    const inline = this.getRulesGfm();\n    const gfm = this.getRulesGfm();\n\n    return (this.rulesBreaks = {\n      ...gfm,\n      ...{\n        br: new ExtendRegexp(inline.br).setGroup('{2,}', '*').getRegexp(),\n        text: new ExtendRegexp(gfm.text).setGroup('{2,}', '*').getRegexp(),\n      },\n    });\n  }\n\n  protected setRules() {\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = this.staticThis.getRulesBreaks();\n      } else {\n        this.rules = this.staticThis.getRulesGfm();\n      }\n    } else if (this.options.pedantic) {\n      this.rules = this.staticThis.getRulesPedantic();\n    } else {\n      this.rules = this.staticThis.getRulesBase();\n    }\n\n    this.hasRulesGfm = (this.rules as RulesInlineGfm).url !== undefined;\n  }\n\n  /**\n   * Lexing/Compiling.\n   */\n  output(nextPart: string): string {\n    nextPart = nextPart;\n    let execArr: RegExpExecArray;\n    let out = '';\n\n    while (nextPart) {\n      // escape\n      if ((execArr = this.rules.escape.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += execArr[1];\n        continue;\n      }\n\n      // autolink\n      if ((execArr = this.rules.autolink.exec(nextPart))) {\n        let text: string;\n        let href: string;\n        nextPart = nextPart.substring(execArr[0].length);\n\n        if (execArr[2] === '@') {\n          text = this.options.escape(\n            execArr[1].charAt(6) === ':' ? this.mangle(execArr[1].substring(7)) : this.mangle(execArr[1])\n          );\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = this.options.escape(execArr[1]);\n          href = text;\n        }\n\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && this.hasRulesGfm && (execArr = (this.rules as RulesInlineGfm).url.exec(nextPart))) {\n        let text: string;\n        let href: string;\n        nextPart = nextPart.substring(execArr[0].length);\n        text = this.options.escape(execArr[1]);\n        href = text;\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // tag\n      if ((execArr = this.rules.tag.exec(nextPart))) {\n        if (!this.inLink && /^<a /i.test(execArr[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(execArr[0])) {\n          this.inLink = false;\n        }\n\n        nextPart = nextPart.substring(execArr[0].length);\n\n        out += this.options.sanitize\n          ? this.options.sanitizer\n            ? this.options.sanitizer(execArr[0])\n            : this.options.escape(execArr[0])\n          : execArr[0];\n        continue;\n      }\n\n      // link\n      if ((execArr = this.rules.link.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        this.inLink = true;\n\n        out += this.outputLink(execArr, {\n          href: execArr[2],\n          title: execArr[3],\n        });\n\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((execArr = this.rules.reflink.exec(nextPart)) || (execArr = this.rules.nolink.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        const keyLink = (execArr[2] || execArr[1]).replace(/\\s+/g, ' ');\n        const link = this.links[keyLink.toLowerCase()];\n\n        if (!link || !link.href) {\n          out += execArr[0].charAt(0);\n          nextPart = execArr[0].substring(1) + nextPart;\n          continue;\n        }\n\n        this.inLink = true;\n        out += this.outputLink(execArr, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if ((execArr = this.rules.strong.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += this.renderer.strong(this.output(execArr[2] || execArr[1]));\n        continue;\n      }\n\n      // em\n      if ((execArr = this.rules.em.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += this.renderer.em(this.output(execArr[2] || execArr[1]));\n        continue;\n      }\n\n      // code\n      if ((execArr = this.rules.code.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += this.renderer.codespan(this.options.escape(execArr[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if ((execArr = this.rules.br.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (this.hasRulesGfm && (execArr = (this.rules as RulesInlineGfm).del.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += this.renderer.del(this.output(execArr[1]));\n        continue;\n      }\n\n      // text\n      if ((execArr = this.rules.text.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        out += this.renderer.text(this.options.escape(this.smartypants(execArr[0])));\n        continue;\n      }\n\n      if (nextPart) {\n        throw new Error('Infinite loop on byte: ' + nextPart.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Compile Link.\n   */\n  protected outputLink(execArr: RegExpExecArray, link: Link) {\n    const href = this.options.escape(link.href);\n    const title = link.title ? this.options.escape(link.title) : null;\n\n    return execArr[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(execArr[1]))\n      : this.renderer.image(href, title, this.options.escape(execArr[1]));\n  }\n\n  /**\n   * Smartypants Transformations.\n   */\n  protected smartypants(text: string) {\n    if (!this.options.smartypants) {\n      return text;\n    }\n\n    return (\n      text\n        // em-dashes\n        .replace(/---/g, '\\u2014')\n        // en-dashes\n        .replace(/--/g, '\\u2013')\n        // opening singles\n        .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n        // closing singles & apostrophes\n        .replace(/'/g, '\\u2019')\n        // opening doubles\n        .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n        // closing doubles\n        .replace(/\"/g, '\\u201d')\n        // ellipses\n        .replace(/\\.{3}/g, '\\u2026')\n    );\n  }\n\n  /**\n   * Mangle Links.\n   */\n  protected mangle(text: string) {\n    if (!this.options.mangle) {\n      return text;\n    }\n\n    let out = '';\n    const length = text.length;\n\n    for (let i = 0; i < length; i++) {\n      let str: string;\n\n      if (Math.random() > 0.5) {\n        str = 'x' + text.charCodeAt(i).toString(16);\n      }\n\n      out += '&#' + str + ';';\n    }\n\n    return out;\n  }\n}\n","/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { InlineLexer } from './inline-lexer';\nimport { Links, MarkedOptions, SimpleRenderer, Token, TokenType } from './interfaces';\nimport { Marked } from './marked';\nimport { Renderer } from './renderer';\n\n/**\n * Parsing & Compiling.\n */\nexport class Parser {\n  simpleRenderers: SimpleRenderer[] = [];\n  protected tokens: Token[];\n  protected token: Token;\n  protected inlineLexer: InlineLexer;\n  protected options: MarkedOptions;\n  protected renderer: Renderer;\n  protected line: number = 0;\n\n  constructor(options?: MarkedOptions) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || Marked.options;\n    this.renderer = this.options.renderer || new Renderer(this.options);\n  }\n\n  static parse(tokens: Token[], links: Links, options?: MarkedOptions): string {\n    const parser = new this(options);\n    return parser.parse(links, tokens);\n  }\n\n  parse(links: Links, tokens: Token[]) {\n    this.inlineLexer = new InlineLexer(InlineLexer, links, this.options, this.renderer);\n    this.tokens = tokens.reverse();\n\n    let out = '';\n\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  }\n\n  debug(links: Links, tokens: Token[]) {\n    this.inlineLexer = new InlineLexer(InlineLexer, links, this.options, this.renderer);\n    this.tokens = tokens.reverse();\n\n    let out = '';\n\n    while (this.next()) {\n      const outToken: string = this.tok();\n      this.token.line = this.line += outToken.split('\\n').length - 1;\n      out += outToken;\n    }\n\n    return out;\n  }\n\n  protected next() {\n    return (this.token = this.tokens.pop());\n  }\n\n  protected getNextElement() {\n    return this.tokens[this.tokens.length - 1];\n  }\n\n  protected parseText() {\n    let body = this.token.text;\n    let nextElement: Token;\n\n    while ((nextElement = this.getNextElement()) && nextElement.type == TokenType.text) {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inlineLexer.output(body);\n  }\n\n  protected tok() {\n    switch (this.token.type) {\n      case TokenType.space: {\n        return '';\n      }\n      case TokenType.paragraph: {\n        return this.renderer.paragraph(this.inlineLexer.output(this.token.text));\n      }\n      case TokenType.text: {\n        if (this.options.isNoP) {\n          return this.parseText();\n        } else {\n          return this.renderer.paragraph(this.parseText());\n        }\n      }\n      case TokenType.heading: {\n        return this.renderer.heading(this.inlineLexer.output(this.token.text), this.token.depth, this.token.text);\n      }\n      case TokenType.listStart: {\n        let body = '';\n        const ordered = this.token.ordered;\n\n        while (this.next().type != TokenType.listEnd) {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered);\n      }\n      case TokenType.listItemStart: {\n        let body = '';\n\n        while (this.next().type != TokenType.listItemEnd) {\n          body += this.token.type == (TokenType.text as any) ? this.parseText() : this.tok();\n        }\n\n        return this.renderer.listitem(body);\n      }\n      case TokenType.looseItemStart: {\n        let body = '';\n\n        while (this.next().type != TokenType.listItemEnd) {\n          body += this.tok();\n        }\n\n        return this.renderer.listitem(body);\n      }\n      case TokenType.code: {\n        return this.renderer.code(this.token.text, this.token.lang, this.token.escaped, this.token.meta);\n      }\n      case TokenType.table: {\n        let header = '';\n        let body = '';\n        let cell;\n\n        // header\n        cell = '';\n        for (let i = 0; i < this.token.header.length; i++) {\n          const flags = { header: true, align: this.token.align[i] };\n          const out = this.inlineLexer.output(this.token.header[i]);\n\n          cell += this.renderer.tablecell(out, flags);\n        }\n\n        header += this.renderer.tablerow(cell);\n\n        for (const row of this.token.cells) {\n          cell = '';\n\n          for (let j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(this.inlineLexer.output(row[j]), {\n              header: false,\n              align: this.token.align[j]\n            });\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n\n        return this.renderer.table(header, body);\n      }\n      case TokenType.blockquoteStart: {\n        let body = '';\n\n        while (this.next().type != TokenType.blockquoteEnd) {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case TokenType.hr: {\n        return this.renderer.hr();\n      }\n      case TokenType.html: {\n        const html =\n          !this.token.pre && !this.options.pedantic ? this.inlineLexer.output(this.token.text) : this.token.text;\n        return this.renderer.html(html);\n      }\n      default: {\n        if (this.simpleRenderers.length) {\n          for (let i = 0; i < this.simpleRenderers.length; i++) {\n            if (this.token.type == 'simpleRule' + (i + 1)) {\n              return this.simpleRenderers[i].call(this.renderer, this.token.execArr);\n            }\n          }\n        }\n\n        const errMsg = `Token with \"${this.token.type}\" type was not found.`;\n\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { BlockLexer } from './block-lexer';\nimport { DebugReturns, LexerReturns, Links, MarkedOptions, SimpleRenderer, Token, TokenType } from './interfaces';\nimport { Parser } from './parser';\n\nexport class Marked {\n  static options = new MarkedOptions();\n  protected static simpleRenderers: SimpleRenderer[] = [];\n\n  /**\n   * Merges the default options with options that will be set.\n   *\n   * @param options Hash of options.\n   */\n  static setOptions(options: MarkedOptions) {\n    Object.assign(this.options, options);\n    return this;\n  }\n\n  /**\n   * Setting simple block rule.\n   */\n  static setBlockRule(regexp: RegExp, renderer: SimpleRenderer = () => '') {\n    BlockLexer.simpleRules.push(regexp);\n    this.simpleRenderers.push(renderer);\n\n    return this;\n  }\n\n  /**\n   * Accepts Markdown text and returns text in HTML format.\n   *\n   * @param src String of markdown source to be compiled.\n   * @param options Hash of options. They replace, but do not merge with the default options.\n   * If you want the merging, you can to do this via `Marked.setOptions()`.\n   */\n  static parse(src: string, options: MarkedOptions = this.options): string {\n    try {\n      const { tokens, links } = this.callBlockLexer(src, options);\n      return this.callParser(tokens, links, options);\n    } catch (e) {\n      return this.callMe(e);\n    }\n  }\n\n  /**\n   * Accepts Markdown text and returns object with text in HTML format,\n   * tokens and links from `BlockLexer.parser()`.\n   *\n   * @param src String of markdown source to be compiled.\n   * @param options Hash of options. They replace, but do not merge with the default options.\n   * If you want the merging, you can to do this via `Marked.setOptions()`.\n   */\n  static debug(src: string, options: MarkedOptions = this.options): DebugReturns {\n    const { tokens, links } = this.callBlockLexer(src, options);\n    let origin = tokens.slice();\n    const parser = new Parser(options);\n    parser.simpleRenderers = this.simpleRenderers;\n    const result = parser.debug(links, tokens);\n\n    /**\n     * Translates a token type into a readable form,\n     * and moves `line` field to a first place in a token object.\n     */\n    origin = origin.map(token => {\n      token.type = (TokenType as any)[token.type] || token.type;\n\n      const line = token.line;\n      delete token.line;\n      if (line) {\n        return { ...{ line }, ...token };\n      } else {\n        return token;\n      }\n    });\n\n    return { tokens: origin, links, result };\n  }\n\n  protected static callBlockLexer(src: string = '', options?: MarkedOptions): LexerReturns {\n    if (typeof src != 'string') {\n      throw new Error(`Expected that the 'src' parameter would have a 'string' type, got '${typeof src}'`);\n    }\n\n    // Preprocessing.\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ')\n      .replace(/\\u00a0/g, ' ')\n      .replace(/\\u2424/g, '\\n')\n      .replace(/^ +$/gm, '');\n\n    return BlockLexer.lex(src, options, true);\n  }\n\n  protected static callParser(tokens: Token[], links: Links, options?: MarkedOptions): string {\n    if (this.simpleRenderers.length) {\n      const parser = new Parser(options);\n      parser.simpleRenderers = this.simpleRenderers;\n      return parser.parse(links, tokens);\n    } else {\n      return Parser.parse(tokens, links, options);\n    }\n  }\n\n  protected static callMe(err: Error) {\n    err.message += '\\nPlease report this to https://github.com/ts-stack/markdown';\n\n    if (this.options.silent) {\n      return '<p>An error occured:</p><pre>' + this.options.escape(err.message + '', true) + '</pre>';\n    }\n\n    throw err;\n  }\n}\n","/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018-2021, Костя Третяк. (MIT Licensed)\n * https://github.com/ts-stack/markdown\n */\n\nimport { ExtendRegexp } from './extend-regexp';\nimport {\n  Align,\n  LexerReturns,\n  Links,\n  MarkedOptions,\n  RulesBlockBase,\n  RulesBlockGfm,\n  RulesBlockTables,\n  Token,\n  TokenType,\n} from './interfaces';\nimport { Marked } from './marked';\n\nexport class BlockLexer<T extends typeof BlockLexer> {\n  static simpleRules: RegExp[] = [];\n  protected static rulesBase: RulesBlockBase = null;\n  /**\n   * GFM Block Grammar.\n   */\n  protected static rulesGfm: RulesBlockGfm = null;\n  /**\n   * GFM + Tables Block Grammar.\n   */\n  protected static rulesTables: RulesBlockTables = null;\n  protected rules: RulesBlockBase | RulesBlockGfm | RulesBlockTables;\n  protected options: MarkedOptions;\n  protected links: Links = {};\n  protected tokens: Token[] = [];\n  protected hasRulesGfm: boolean;\n  protected hasRulesTables: boolean;\n\n  constructor(protected staticThis: T, options?: object) {\n    this.options = options || Marked.options;\n    this.setRules();\n  }\n\n  /**\n   * Accepts Markdown text and returns object with tokens and links.\n   *\n   * @param src String of markdown source to be compiled.\n   * @param options Hash of options.\n   */\n  static lex(src: string, options?: MarkedOptions, top?: boolean, isBlockQuote?: boolean): LexerReturns {\n    const lexer = new this(this, options);\n    return lexer.getTokens(src, top, isBlockQuote);\n  }\n\n  protected static getRulesBase(): RulesBlockBase {\n    if (this.rulesBase) {\n      return this.rulesBase;\n    }\n\n    const base: RulesBlockBase = {\n      newline: /^\\n+/,\n      code: /^( {4}[^\\n]+\\n*)+/,\n      hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n      heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n      lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n      blockquote: /^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+/,\n      list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n      html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n      def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n      paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n      text: /^[^\\n]+/,\n      bullet: /(?:[*+-]|\\d+\\.)/,\n      item: /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/,\n    };\n\n    base.item = new ExtendRegexp(base.item, 'gm').setGroup(/bull/g, base.bullet).getRegexp();\n\n    base.list = new ExtendRegexp(base.list)\n      .setGroup(/bull/g, base.bullet)\n      .setGroup('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n      .setGroup('def', '\\\\n+(?=' + base.def.source + ')')\n      .getRegexp();\n\n    const tag =\n      '(?!(?:' +\n      'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' +\n      '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' +\n      '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\n    base.html = new ExtendRegexp(base.html)\n      .setGroup('comment', /<!--[\\s\\S]*?-->/)\n      .setGroup('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n      .setGroup('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n      .setGroup(/tag/g, tag)\n      .getRegexp();\n\n    base.paragraph = new ExtendRegexp(base.paragraph)\n      .setGroup('hr', base.hr)\n      .setGroup('heading', base.heading)\n      .setGroup('lheading', base.lheading)\n      .setGroup('blockquote', base.blockquote)\n      .setGroup('tag', '<' + tag)\n      .setGroup('def', base.def)\n      .getRegexp();\n\n    return (this.rulesBase = base);\n  }\n\n  protected static getRulesGfm(): RulesBlockGfm {\n    if (this.rulesGfm) {\n      return this.rulesGfm;\n    }\n\n    const base = this.getRulesBase();\n\n    const gfm: RulesBlockGfm = {\n      ...base,\n      ...{\n        fences: /^ *(`{3,}|~{3,})[ \\.]*((\\S+)? *[^\\n]*)\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n        paragraph: /^/,\n        heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/,\n      },\n    };\n\n    const group1 = gfm.fences.source.replace('\\\\1', '\\\\2');\n    const group2 = base.list.source.replace('\\\\1', '\\\\3');\n\n    gfm.paragraph = new ExtendRegexp(base.paragraph).setGroup('(?!', `(?!${group1}|${group2}|`).getRegexp();\n\n    return (this.rulesGfm = gfm);\n  }\n\n  protected static getRulesTable(): RulesBlockTables {\n    if (this.rulesTables) {\n      return this.rulesTables;\n    }\n\n    return (this.rulesTables = {\n      ...this.getRulesGfm(),\n      ...{\n        nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n        table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/,\n      },\n    });\n  }\n\n  protected setRules() {\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = this.staticThis.getRulesTable();\n      } else {\n        this.rules = this.staticThis.getRulesGfm();\n      }\n    } else {\n      this.rules = this.staticThis.getRulesBase();\n    }\n\n    this.hasRulesGfm = (this.rules as RulesBlockGfm).fences !== undefined;\n    this.hasRulesTables = (this.rules as RulesBlockTables).table !== undefined;\n  }\n\n  /**\n   * Lexing.\n   */\n  protected getTokens(src: string, top?: boolean, isBlockQuote?: boolean): LexerReturns {\n    let nextPart = src;\n    let execArr: RegExpExecArray;\n\n    mainLoop: while (nextPart) {\n      // newline\n      if ((execArr = this.rules.newline.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        if (execArr[0].length > 1) {\n          this.tokens.push({ type: TokenType.space });\n        }\n      }\n\n      // code\n      if ((execArr = this.rules.code.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        const code = execArr[0].replace(/^ {4}/gm, '');\n\n        this.tokens.push({\n          type: TokenType.code,\n          text: !this.options.pedantic ? code.replace(/\\n+$/, '') : code,\n        });\n        continue;\n      }\n\n      // fences code (gfm)\n      if (this.hasRulesGfm && (execArr = (this.rules as RulesBlockGfm).fences.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        this.tokens.push({\n          type: TokenType.code,\n          meta: execArr[2],\n          lang: execArr[3],\n          text: execArr[4] || '',\n        });\n        continue;\n      }\n\n      // heading\n      if ((execArr = this.rules.heading.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        this.tokens.push({\n          type: TokenType.heading,\n          depth: execArr[1].length,\n          text: execArr[2],\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (top && this.hasRulesTables && (execArr = (this.rules as RulesBlockTables).nptable.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        const item: Token = {\n          type: TokenType.table,\n          header: execArr[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: execArr[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */) as Align[],\n          cells: [],\n        };\n\n        for (let i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        const td: string[] = execArr[3].replace(/\\n$/, '').split('\\n');\n\n        for (let i = 0; i < td.length; i++) {\n          item.cells[i] = td[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      }\n\n      // lheading\n      if ((execArr = this.rules.lheading.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        this.tokens.push({\n          type: TokenType.heading,\n          depth: execArr[2] === '=' ? 1 : 2,\n          text: execArr[1],\n        });\n        continue;\n      }\n\n      // hr\n      if ((execArr = this.rules.hr.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        this.tokens.push({ type: TokenType.hr });\n        continue;\n      }\n\n      // blockquote\n      if ((execArr = this.rules.blockquote.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        this.tokens.push({ type: TokenType.blockquoteStart });\n        const str = execArr[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.getTokens(str);\n        this.tokens.push({ type: TokenType.blockquoteEnd });\n        continue;\n      }\n\n      // list\n      if ((execArr = this.rules.list.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        const bull: string = execArr[2];\n\n        this.tokens.push({ type: TokenType.listStart, ordered: bull.length > 1 });\n\n        // Get each top-level item.\n        const str = execArr[0].match(this.rules.item);\n        const length = str.length;\n\n        let next = false;\n        let space: number;\n        let blockBullet: string;\n        let loose: boolean;\n\n        for (let i = 0; i < length; i++) {\n          let item = str[i];\n\n          // Remove the list item's bullet so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n          // Outdent whatever the list item contains. Hacky.\n          if (item.indexOf('\\n ') !== -1) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (this.options.smartLists && i !== length - 1) {\n            blockBullet = this.staticThis.getRulesBase().bullet.exec(str[i + 1])[0];\n\n            if (bull !== blockBullet && !(bull.length > 1 && blockBullet.length > 1)) {\n              nextPart = str.slice(i + 1).join('\\n') + nextPart;\n              i = length - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== length - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n\n            if (!loose) {\n              loose = next;\n            }\n          }\n\n          this.tokens.push({ type: loose ? TokenType.looseItemStart : TokenType.listItemStart });\n\n          // Recurse.\n          this.getTokens(item, false, isBlockQuote);\n          this.tokens.push({ type: TokenType.listItemEnd });\n        }\n\n        this.tokens.push({ type: TokenType.listEnd });\n        continue;\n      }\n\n      // html\n      if ((execArr = this.rules.html.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        const attr = execArr[1];\n        const isPre = attr === 'pre' || attr === 'script' || attr === 'style';\n\n        this.tokens.push({\n          type: this.options.sanitize ? TokenType.paragraph : TokenType.html,\n          pre: !this.options.sanitizer && isPre,\n          text: execArr[0],\n        });\n        continue;\n      }\n\n      // def\n      if (top && (execArr = this.rules.def.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        this.links[execArr[1].toLowerCase()] = {\n          href: execArr[2],\n          title: execArr[3],\n        };\n        continue;\n      }\n\n      // table (gfm)\n      if (top && this.hasRulesTables && (execArr = (this.rules as RulesBlockTables).table.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        const item: Token = {\n          type: TokenType.table,\n          header: execArr[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: execArr[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */) as Align[],\n          cells: [],\n        };\n\n        for (let i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        const td = execArr[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n');\n\n        for (let i = 0; i < td.length; i++) {\n          item.cells[i] = td[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      }\n\n      // simple rules\n      if (this.staticThis.simpleRules.length) {\n        const simpleRules = this.staticThis.simpleRules;\n        for (let i = 0; i < simpleRules.length; i++) {\n          if ((execArr = simpleRules[i].exec(nextPart))) {\n            nextPart = nextPart.substring(execArr[0].length);\n            const type = 'simpleRule' + (i + 1);\n            this.tokens.push({ type, execArr });\n            continue mainLoop;\n          }\n        }\n      }\n\n      // top-level paragraph\n      if (top && (execArr = this.rules.paragraph.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n\n        if (execArr[1].slice(-1) === '\\n') {\n          this.tokens.push({\n            type: TokenType.paragraph,\n            text: execArr[1].slice(0, -1),\n          });\n        } else {\n          this.tokens.push({\n            type: this.tokens.length > 0 ? TokenType.paragraph : TokenType.text,\n            text: execArr[1],\n          });\n        }\n        continue;\n      }\n\n      // text\n      // Top-level should never reach here.\n      if ((execArr = this.rules.text.exec(nextPart))) {\n        nextPart = nextPart.substring(execArr[0].length);\n        this.tokens.push({ type: TokenType.text, text: execArr[0] });\n        continue;\n      }\n\n      if (nextPart) {\n        throw new Error(\n          'Infinite loop on byte: ' + nextPart.charCodeAt(0) + `, near text '${nextPart.slice(0, 30)}...'`\n        );\n      }\n    }\n\n    return { tokens: this.tokens, links: this.links };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["TokenType"],"mappings":"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"}